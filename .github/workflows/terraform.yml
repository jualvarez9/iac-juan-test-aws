name: 'Terraform IAC AWS Workflow'

on:
  push:
    branches: [ "main" ]
  
  workflow_dispatch:


permissions:
  contents: read
  


jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        
    steps:
    # Bajamos el codigo del repo al runner
    - name: Checkout
      uses: actions/checkout@v4

    # Instalamos Terraform en el runner
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    # Inicializar Terraform
    - name: Terraform Init
      run: terraform init

    # Formatear codigo
    - name: Terraform Format
      run: terraform fmt

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan -input=false

    # Apply the Terraform plan
    - name: Terraform Apply
      if: contains(github.event.head_commit.message, 'deploy') && !contains(github.event.head_commit.message, 'destroy')
      run: terraform apply -auto-approve

    # Destroy the Terraform-managed infrastructure
    - name: Terraform Destroy
      if: contains(github.event.head_commit.message, 'destroy') && !contains(github.event.head_commit.message, 'deploy')
      run: terraform destroy -auto-approve

